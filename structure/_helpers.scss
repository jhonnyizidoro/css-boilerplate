/**
This color section will generate classes for text color and background-color for each element inside $defaultColors list

OUTPUT:
.text-primary {
	color: #00D1B2;
}
.background-primary {
	background-color: #00D1B2;
}
*/
$primary: #00D1B2 !default;
$secondary: #F96854 !default;
$muted: #848484 !default;
$white: #FFFFFF !default;
$black: #0A0A0A !default;
$light: #F5F5F5 !default;
$dark: #363636 !default;
$link: #3273DC !default;
$info: #209CEE !default;
$success: #23D160 !default;
$warning: #FFDD57 !default;
$danger: #FF3860 !default;

$defaultColors: (
	'primary': $primary,
	'secondary': $secondary,
	'muted': $muted,
	'white': $white,
	'black': $black,
	'light': $light,
	'dark': $dark,
	'link': $link,
	'info': $info,
	'success': $success,
	'warning': $warning,
	'danger': $danger
);

@each $colorName, $color in $defaultColors {
	.text-#{$colorName} {
		color: $color;
	}
	.background-#{$colorName} {
		background-color: $color;
	}
}


/**
This block generates some helpers classes for margin and padding.
It will use the values inside the #spaceAmounts list.

OUTPUT:
.p-l-30 {
	padding-left: 30px;
}
.m-b-10 {
	margin-bottom: 10px;
}
*/
$spaceAmounts: (0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 75, 100);
$sides: (top, bottom, left, right);
@each $space in $spaceAmounts {
	@each $side in $sides {
		.m-#{str-slice($side, 0, 1)}-#{$space} {
			margin-#{$side}: #{$space}px;
		}
		.p-#{str-slice($side, 0, 1)}-#{$space} {
			padding-#{$side}: #{$space}px;
		}
	}
}


//This block generates some helpers classes font weight.
@for $i from 1 through 10 {
	.text-weight-#{$i * 100} {
		font-weight: $i * 100;
	}
}


//Sizes
.fullwidth {
	width: 100%;
}
.fullheight {
	height: 100%;
}
.fill {
	height: 100%;
	width: 100%;
}

//Text align
$textAligns: (left, right, center, justify);
@each $alignment in $textAligns {
	.text-#{$alignment} {
		display: block;
		text-align: $alignment;
	}
}


//Displays
.inline-block {
	display: inline-block;
}
.inline {
	display: inline;
}
.block {
	display: block;
}

//Position
.relative {
	position: relative;
}
.absolute {
	position: absolute;
}
.fixed {
	position: fixed;
}
.static {
	position: static;
}

//Spacings and borders
.paddingless {
	padding: 0;
}
.marginless {
	margin: 0;
}
.borderless {
	border: none;
}

//Displays on screen sizes
$desktopStart: 100px !default;
@media only screen and (min-width: $desktopStart) {
	.hide-on-desktop {
		display: none;
	}
}
@media only screen and (max-width: $desktopStart) {
	.hide-on-mobile {
		display: none;
	}
}